// Generated by CoffeeScript 1.9.3
(function() {
  var appointment, express, router;

  express = require('express');

  appointment = require('../lib/model');

  router = express.Router();

  router["delete"]("/appointments/:id", function(req, res, next) {
    var apt_id;
    apt_id = req.params.id;
    res.set('Content-Type', 'application/json');
    if (!req.session.user) {
      res.statusCode = 401;
      res.send({
        errno: 401,
        message: "Unauthorized."
      });
      return;
    }
    return appointment.appointmentsByUser(req.session.user.user_id, function(err, rows, fields) {
      var item, num;
      if (err) {
        res.statusCode = 500;
        res.send({
          errno: 500,
          message: "Query appointment error " + err.code
        });
        return;
      }
      num = (function() {
        var i, len, results;
        results = [];
        for (i = 0, len = rows.length; i < len; i++) {
          item = rows[i];
          if (item.id === parseInt(apt_id)) {
            results.push(item);
          }
        }
        return results;
      })();
      if (num.length > 0) {
        appointment.deleteAppointment(apt_id, function(err, result) {
          if (err) {
            res.statusCode = 500;
            res.send({
              errno: 500,
              message: "取消预约失败: " + err.code
            });
            return;
          }
          res.statusCode = 200;
          res.send({
            errno: 0,
            message: "成功取消预约"
          });
        });
        return;
      }
      res.statusCode = 200;
      return res.send({
        errno: 404,
        message: "取消错误，找到不该预约记录"
      });
    });
  });

  router.get("/appointments", function(req, res, next) {
    res.set('Content-Type', 'application/json');
    if (!req.session.user) {
      res.statusCode = 401;
      res.send({
        code: 401,
        error: "Unauthorized."
      });
      return;
    }
    return appointment.appointmentsByUser(req.session.user.user_id, function(err, rows, fields) {
      if (err) {
        console.log(err);
        res.statusCode = 500;
        res.send({
          errno: 500,
          message: "Database error " + err.code
        });
        return;
      }
      return res.send({
        errno: 0,
        data: rows
      });
    });
  });

  router.post("/appointments", function(req, res, next) {
    var data, user;
    res.set('Content-Type', 'application/json');
    if (!req.session.user) {
      res.statusCode = 401;
      res.send({
        errno: 401,
        message: "Unauthorized."
      });
      return;
    }
    user = req.session.user;
    data = {
      name: user.name,
      phonenum: req.body["phonenum"],
      appointment_date: req.body["appointment_date"],
      appointment_time: req.body["appointment_time"],
      kitchen_type: req.body["kitchen_type"]
    };
    appointment.addAppointmentByUser(req.session.user.user_id, data, function(err, out) {
      if (err) {
        console.log(err);
        res.statusCode = 500;
        res.send({
          errno: 500,
          message: "Database error " + err.code
        });
        return;
      }
      res.statusCode = 201;
      return res.send({
        errno: 0,
        data: "Created"
      });
    });
  });

  router.get("/user/info", function(req, res, next) {
    var apt_id, user;
    apt_id = req.params.id;
    res.set('Content-Type', 'application/json');
    if (!req.session.user) {
      res.statusCode = 401;
      res.send({
        errno: 401,
        error: "Unauthorized."
      });
      return;
    }
    user = req.session.user;
    return res.send({
      errno: 0,
      data: {
        user_id: user.user_id,
        name: user.name,
        phonenum: user.phonenum
      }
    });
  });

  module.exports = router;

}).call(this);
